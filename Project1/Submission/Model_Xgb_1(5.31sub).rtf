{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 setwd("~/Desktop/Justin/2018-1/DataMining/Pro")\
# Setting\
set.seed(1234)\
library(caret)\
\
data <- read.csv("data1.csv") ;data <- data[, -1]\
idx <- createDataPartition(data$price, p = 0.8, list = F)\
\
data.train <- data[idx, ]\
data.test <- data[-idx,]\
\
control <- trainControl(method = 'cv', search = 'grid', number = 5)\
\
xgb.grid = expand.grid(\
  .nrounds = 1000,\
  .max_depth = 7,\
  .eta = 0.1,\
  .gamma = 0,\
  .colsample_bytree = 1,\
  .min_child_weight = 0.5,\
  .subsample = 1\
)\
\
xgb.model <- train(\
  price ~ .,\
  data = data,\
  tuneGrid = xgb.grid,\
  tuneLength = 1,\
  trControl = control,\
  method = 'xgbTree'\
)\
\
test <- read.csv("test1.csv") ; test <- test[, -1]\
price.result <- predict(xgb.model, test)\
result <- exp(price.result)\
result <- data.frame('price' = result)\
write.csv(result, file = "
\f1 \'be\'c8\'bb\'f3\'c1\'d8
\f0 .csv")}